
@{
    ViewData["Title"] = "CRUD Operations";
}
<!-- Listing Screen Start-->
<div class="container">
    <h2>CRUD Operations</h2>
    <button class="btn btn-primary" onclick="showModal()">Add New</button>
    <table class="table table-striped table-bordered table-hover mt-3" id="data-table">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<!-- Listing Screen End-->

<!-- Modal Insert And Update Form Start-->
<div class="modal fade" id="crudModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Add New Record</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="crudForm">
                    <input type="hidden" id="c_id" name="c_id" value="0">
                    <div class="mb-3">
                        <label for="c_name" class="form-label">Name</label>
                        <input type="text" class="form-control" id="c_name" name="c_name" required oninvalid="this.setCustomValidity('Please Enter Your Name.')">
                        <div id="nameError" class="invalid-feedback">Please enter a valid name (only characters and spaces allowed).</div>
                    </div>
                    <div class="mb-3">
                        <label for="c_email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="c_email" name="c_email" required oninvalid="this.setCustomValidity('Please Enter Your Email.')">
                        <div id="emailError" class="invalid-feedback">Please enter a valid email address (ex: example@gmail.com).</div>
                    </div>
                    <div class="mb-3">
                        <label for="c_phone" class="form-label">Phone</label>
                        <input type="text" class="form-control" id="c_phone" name="c_phone" required oninvalid="this.setCustomValidity('Please Enter Your Phone Number.')">
                        <div id="phoneError" class="invalid-feedback">Please enter a phone number with 10 digits.</div>
                    </div>
                    <div class="mb-3">
                        <label for="c_address" class="form-label">Address</label>
                        <input type="text" class="form-control" id="c_address" name="c_address">
                    </div>
                    <div class="mb-3">
                        <label for="c_sid" class="form-label">State</label>
                        <select class="form-control" id="c_sid" name="c_sid" required onchange="loadCities()" oninvalid="this.setCustomValidity('Please select a state.')">
                            <option value="">Select State</option>
                        </select>
                        <div id="c_sidError" class="invalid-feedback">Please select a state.</div>
                    </div>
                    <div class="mb-3">
                        <label for="c_cid" class="form-label">City</label>
                        <select class="form-control" id="c_cid" name="c_cid" required oninvalid="this.setCustomValidity('Please select a city.')">
                            <option value="">Select City</option>
                        </select>
                    </div>

                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="c_isagree" name="c_isagree" value="true">
                        <label class="form-check-label" for="c_isagree">Agree</label>
                    </div>
                    <div class="mt-3">
                        <button type="submit" class="btn btn-primary" id="submitBtn" disabled>submit</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal Insert And Update Form End-->

<!-- Delete Confirmation view Start -->
<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this record?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>
<!-- Delete Confirmation View End -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
@* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script> *@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.0/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<script>
    $(document).ready(function () {
        loadTable();

        $("#crudForm").on("submit", function (event) {
            event.preventDefault();
            var c_id = $("#c_id").val();
            var url = c_id == 0 ? "/crud/add" : "/crud/edit";
            $.ajax({
                url: url,
                type: "POST",
                data: $(this).serialize(),
                success: function (response) {
                    $("#crudModal").modal('hide');
                    loadTable();
                }
            });
        });

          $("#c_isagree").on("change", function () {
            if ($(this).is(":checked")) {
                $("#submitBtn").prop("disabled", false);
            } else {
                $("#submitBtn").prop("disabled", true);
            }
        });
    

    });
    
// function for loadtable(load list)
    function loadTable() {
        $.ajax({
            url: "/crud/getall",
            type: "GET",
            success: function (response) {
                var rows = "";
                response.forEach(function (item) {
                    rows += "<tr>" +
                        "<td>" + item.c_name + "</td>" +
                        "<td>" + item.c_email + "</td>" +
                        "<td>" + item.c_phone + "</td>" +
                        "<td>" +
                            "<button class='btn btn-success' onclick='editRecord(" + JSON.stringify(item) + ")'>Edit</button>" +
                            " <button class='btn btn-danger' onclick='deleteRecord(" + item.c_id + ")'>Delete</button>" +
                        "</td>" +
                        "</tr>";
                });
                $("#data-table tbody").html(rows);
            }
        });
    }

// function for insert
    function showModal() {
        loadStates();
        @* loadCities(); *@
        $("#crudModal").modal('show');
        $("#crudForm")[0].reset();
        $("#c_id").val(0);
        $("#modalTitle").text("Add New Record");
    }

// function for update
    function editRecord(item) {
    $("#crudModal").modal('show');
    $("#c_id").val(item.c_id);
    $("#c_name").val(item.c_name);
    $("#c_email").val(item.c_email);
    $("#c_phone").val(item.c_phone);
    $("#c_address").val(item.c_address);
    $("#c_isagree").prop('checked', item.c_isagree);
    $("#modalTitle").text("Edit Record");

    // Load states and select the correct state
    loadStates(function () {
        $("#c_sid").val(item.c_sid);
        // Load cities and select the correct city
        loadCities(function () {
            $("#c_cid").val(item.c_cid);
        });
    });
}


    @* function deleteRecord(id) {
        if (confirm("Are you sure you want to delete this record?")) {
            $.ajax({
                url: "/crud/delete",
                type: "POST",
                data: { id: id },
                success: function (response) {
                    loadTable();
                }
            });
        }
    } *@

    // function for delete
function deleteRecord(id) {
    $('#confirmationModal').modal('show');
    
    $('#confirmDelete').click(function() {
        $.ajax({
            url: "/crud/delete",
            type: "POST",
            data: { id: id },
            success: function (response) {
                loadTable();
                $('#confirmationModal').modal('hide');
            }
        });
    });
}


    // function for load states in dropdown
    function loadStates() {
        $.ajax({
            url: "/crud/getallstates",
            type: "GET",
            success: function (response) {
                var options = "<option value=''>Select State</option>";
                response.forEach(function (state) {
                    options += "<option value='" + state.c_sid + "'>" + state.c_sname + "</option>";
                });
                $("#c_sid").html(options);
            },
            error: function(xhr, status, error) {
                console.error("Error: " + error);
            }
        });
    }
    
    //function load cities in dropdown
   function loadCities() {
    var stateId = $("#c_sid").val();
    if (stateId) {
        $.ajax({
            url: "/crud/getallcitys/" + stateId,
            type: "GET",
            success: function (response) {
                var options = "<option value=''>Select City</option>";
                response.forEach(function (city) {
                    options += "<option value='" + city.c_cid + "'>" + city.c_cname + "</option>";
                });
                $("#c_cid").html(options);
            },
            error: function (xhr, status, error) {
                console.error("Error: " + error);
            }
        });
    } else {
        $("#c_cid").html("<option value=''>Select City</option>");
    }
}


// function for load states for edit
function loadStates(callback) {
    $.ajax({
        url: "/crud/getallstates",
        type: "GET",
        success: function (response) {
            var options = "<option value=''>Select State</option>";
            response.forEach(function (state) {
                options += "<option value='" + state.c_sid + "'>" + state.c_sname + "</option>";
            });
            $("#c_sid").html(options);
            if (callback) callback();
        },
        error: function(xhr, status, error) {
            console.error("Error: " + error);
        }
    });
}

// function for load cities for edit
function loadCities(callback) {
    var stateId = $("#c_sid").val();
    if (stateId) {
        $.ajax({
            url: "/crud/getallcitys/" + stateId,
            type: "GET",
            success: function (response) {
                var options = "<option value=''>Select City</option>";
                response.forEach(function (city) {
                    options += "<option value='" + city.c_cid + "'>" + city.c_cname + "</option>";
                });
                $("#c_cid").html(options);
                if (callback) callback();
            },
            error: function (xhr, status, error) {
                console.error("Error: " + error);
            }
        });
    } else {
        $("#c_cid").html("<option value=''>Select City</option>");
    }
}

@* function validateFields() {
    validateName();
    validateEmail();
    validatePhone();
    // Add more field validations here
} *@

// function for validation on name
function validateName() {
    var name = $("#c_name").val();
    if (!/^[A-Za-z ]+$/.test(name)) {
        $("#c_name").addClass("is-invalid");
        $("#nameError").show();
    } else {
        $("#c_name").removeClass("is-invalid");
        $("#nameError").hide();
    }
}

//function for validation on email
function validateEmail() {
    var email = $("#c_email").val();
    if (!isValidEmail(email)) {
        $("#c_email").addClass("is-invalid");
        $("#emailError").show();
    } else {
        $("#c_email").removeClass("is-invalid");
        $("#emailError").hide();
    }
}

//function for validation on phone
function validatePhone() {
    var phone = $("#c_phone").val();
    if (!isValidPhone(phone)) {
        $("#c_phone").addClass("is-invalid");
        $("#phoneError").show();
    } else {
        $("#c_phone").removeClass("is-invalid");
        $("#phoneError").hide();
    }
} 

// function for regular expression of phone number
function isValidPhone(phone) {
    var phoneRegex = /^\d{10}$/;
    return phoneRegex.test(phone);
}

// function for regular expression of email
function isValidEmail(email) {
    var emailRegex = /^[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
    return emailRegex.test(email);
}



// Call validateFields whenever needed
$("#c_name").on("keyup", validateName);
$("#c_email").on("keyup", validateEmail);
$("#c_phone").on("keyup", validatePhone);



</script>
